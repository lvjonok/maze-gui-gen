# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'source/qt_ui/settings.ui'
#
# Created by: PyQt5 UI code generator 5.15.0
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_settingsForm(object):
    def setupUi(self, settingsForm):
        settingsForm.setObjectName("settingsForm")
        settingsForm.setWindowModality(QtCore.Qt.NonModal)
        settingsForm.resize(700, 450)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(settingsForm.sizePolicy().hasHeightForWidth())
        settingsForm.setSizePolicy(sizePolicy)
        settingsForm.setMinimumSize(QtCore.QSize(700, 450))
        settingsForm.setMaximumSize(QtCore.QSize(700, 450))
        self.horizontalLayout = QtWidgets.QHBoxLayout(settingsForm)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.groupBox = QtWidgets.QGroupBox(settingsForm)
        self.groupBox.setObjectName("groupBox")
        self.gridLayout = QtWidgets.QGridLayout(self.groupBox)
        self.gridLayout.setObjectName("gridLayout")
        self.excersizeTime = QtWidgets.QTimeEdit(self.groupBox)
        self.excersizeTime.setCurrentSection(QtWidgets.QDateTimeEdit.MinuteSection)
        self.excersizeTime.setTimeSpec(QtCore.Qt.LocalTime)
        self.excersizeTime.setTime(QtCore.QTime(0, 59, 59))
        self.excersizeTime.setObjectName("excersizeTime")
        self.gridLayout.addWidget(self.excersizeTime, 9, 1, 1, 3)
        self.linePixelSizeLabel = QtWidgets.QLabel(self.groupBox)
        self.linePixelSizeLabel.setMaximumSize(QtCore.QSize(16777215, 17))
        self.linePixelSizeLabel.setObjectName("linePixelSizeLabel")
        self.gridLayout.addWidget(self.linePixelSizeLabel, 6, 0, 1, 1)
        self.lineColorLabel = QtWidgets.QLabel(self.groupBox)
        self.lineColorLabel.setObjectName("lineColorLabel")
        self.gridLayout.addWidget(self.lineColorLabel, 11, 0, 1, 1)
        self.mazeCellSizeValue = QtWidgets.QLabel(self.groupBox)
        self.mazeCellSizeValue.setObjectName("mazeCellSizeValue")
        self.gridLayout.addWidget(self.mazeCellSizeValue, 7, 2, 1, 2)
        self.svgFieldLabel = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.svgFieldLabel.sizePolicy().hasHeightForWidth())
        self.svgFieldLabel.setSizePolicy(sizePolicy)
        self.svgFieldLabel.setObjectName("svgFieldLabel")
        self.gridLayout.addWidget(self.svgFieldLabel, 1, 0, 1, 1)
        self.pngImageCheckBox = QtWidgets.QCheckBox(self.groupBox)
        self.pngImageCheckBox.setObjectName("pngImageCheckBox")
        self.gridLayout.addWidget(self.pngImageCheckBox, 0, 1, 1, 1)
        self.timelimitLabel = QtWidgets.QLabel(self.groupBox)
        self.timelimitLabel.setObjectName("timelimitLabel")
        self.gridLayout.addWidget(self.timelimitLabel, 9, 0, 1, 1)
        self.lineCellSizeLabel = QtWidgets.QLabel(self.groupBox)
        self.lineCellSizeLabel.setObjectName("lineCellSizeLabel")
        self.gridLayout.addWidget(self.lineCellSizeLabel, 5, 0, 1, 1)
        self.roboticsKitLabel = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.roboticsKitLabel.sizePolicy().hasHeightForWidth())
        self.roboticsKitLabel.setSizePolicy(sizePolicy)
        self.roboticsKitLabel.setObjectName("roboticsKitLabel")
        self.gridLayout.addWidget(self.roboticsKitLabel, 3, 0, 1, 1)
        self.lineCellSizeSlider = QtWidgets.QSlider(self.groupBox)
        self.lineCellSizeSlider.setStyleSheet("QSlider::groove:vertical {\n"
"    background: red;\n"
"    position: absolute; /* absolutely position 4px from the left and right of the widget. setting margins on the widget should work too... */\n"
"    left: 4px; right: 4px;\n"
"}\n"
"\n"
"QSlider::handle:vertical {\n"
"    height: 10px;\n"
"    background: green;\n"
"    margin: 0 -4px; /* expand outside the groove */\n"
"}\n"
"\n"
"QSlider::add-page:vertical {\n"
"    background: white;\n"
"}\n"
"\n"
"QSlider::sub-page:vertical {\n"
"    background: pink;\n"
"}")
        self.lineCellSizeSlider.setMinimum(1)
        self.lineCellSizeSlider.setMaximum(30)
        self.lineCellSizeSlider.setProperty("value", 2)
        self.lineCellSizeSlider.setSliderPosition(2)
        self.lineCellSizeSlider.setOrientation(QtCore.Qt.Horizontal)
        self.lineCellSizeSlider.setObjectName("lineCellSizeSlider")
        self.gridLayout.addWidget(self.lineCellSizeSlider, 5, 1, 1, 1)
        self.applyChangesButton = QtWidgets.QPushButton(self.groupBox)
        self.applyChangesButton.setObjectName("applyChangesButton")
        self.gridLayout.addWidget(self.applyChangesButton, 12, 0, 1, 1)
        self.pngImageLabel = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pngImageLabel.sizePolicy().hasHeightForWidth())
        self.pngImageLabel.setSizePolicy(sizePolicy)
        self.pngImageLabel.setObjectName("pngImageLabel")
        self.gridLayout.addWidget(self.pngImageLabel, 0, 0, 1, 1)
        self.mazeCellSizeLabel = QtWidgets.QLabel(self.groupBox)
        self.mazeCellSizeLabel.setObjectName("mazeCellSizeLabel")
        self.gridLayout.addWidget(self.mazeCellSizeLabel, 7, 0, 1, 1)
        self.svgFieldCheckBox = QtWidgets.QCheckBox(self.groupBox)
        self.svgFieldCheckBox.setObjectName("svgFieldCheckBox")
        self.gridLayout.addWidget(self.svgFieldCheckBox, 1, 1, 1, 1)
        self.lineCellSizeValue = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineCellSizeValue.sizePolicy().hasHeightForWidth())
        self.lineCellSizeValue.setSizePolicy(sizePolicy)
        self.lineCellSizeValue.setScaledContents(False)
        self.lineCellSizeValue.setObjectName("lineCellSizeValue")
        self.gridLayout.addWidget(self.lineCellSizeValue, 5, 2, 1, 2)
        self.linePixelSizeValue = QtWidgets.QLabel(self.groupBox)
        self.linePixelSizeValue.setObjectName("linePixelSizeValue")
        self.gridLayout.addWidget(self.linePixelSizeValue, 6, 2, 1, 2)
        self.colorLabel = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.colorLabel.sizePolicy().hasHeightForWidth())
        self.colorLabel.setSizePolicy(sizePolicy)
        self.colorLabel.setStyleSheet("QLabel {background-color: rgb(0, 0, 0);}\n"
"")
        self.colorLabel.setText("")
        self.colorLabel.setObjectName("colorLabel")
        self.gridLayout.addWidget(self.colorLabel, 11, 1, 1, 3)
        self.linePixelSizeSlider = QtWidgets.QSlider(self.groupBox)
        self.linePixelSizeSlider.setMinimum(1)
        self.linePixelSizeSlider.setMaximum(30)
        self.linePixelSizeSlider.setProperty("value", 6)
        self.linePixelSizeSlider.setOrientation(QtCore.Qt.Horizontal)
        self.linePixelSizeSlider.setObjectName("linePixelSizeSlider")
        self.gridLayout.addWidget(self.linePixelSizeSlider, 6, 1, 1, 1)
        self.mazeCellSizeSlider = QtWidgets.QSlider(self.groupBox)
        self.mazeCellSizeSlider.setToolTip("")
        self.mazeCellSizeSlider.setMinimum(1)
        self.mazeCellSizeSlider.setMaximum(30)
        self.mazeCellSizeSlider.setProperty("value", 3)
        self.mazeCellSizeSlider.setOrientation(QtCore.Qt.Horizontal)
        self.mazeCellSizeSlider.setObjectName("mazeCellSizeSlider")
        self.gridLayout.addWidget(self.mazeCellSizeSlider, 7, 1, 1, 1)
        self.roboticsKitList = QtWidgets.QComboBox(self.groupBox)
        self.roboticsKitList.setObjectName("roboticsKitList")
        self.roboticsKitList.addItem("")
        self.roboticsKitList.addItem("")
        self.roboticsKitList.addItem("")
        self.gridLayout.addWidget(self.roboticsKitList, 3, 1, 1, 1)
        self.MazeLoopsLabel = QtWidgets.QLabel(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MazeLoopsLabel.sizePolicy().hasHeightForWidth())
        self.MazeLoopsLabel.setSizePolicy(sizePolicy)
        self.MazeLoopsLabel.setObjectName("MazeLoopsLabel")
        self.gridLayout.addWidget(self.MazeLoopsLabel, 2, 0, 1, 1)
        self.MazeLoopsCheckBox = QtWidgets.QCheckBox(self.groupBox)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.MazeLoopsCheckBox.sizePolicy().hasHeightForWidth())
        self.MazeLoopsCheckBox.setSizePolicy(sizePolicy)
        self.MazeLoopsCheckBox.setAutoFillBackground(False)
        self.MazeLoopsCheckBox.setChecked(False)
        self.MazeLoopsCheckBox.setTristate(False)
        self.MazeLoopsCheckBox.setObjectName("MazeLoopsCheckBox")
        self.gridLayout.addWidget(self.MazeLoopsCheckBox, 2, 1, 1, 1)
        self.horizontalLayout.addWidget(self.groupBox)

        self.retranslateUi(settingsForm)
        QtCore.QMetaObject.connectSlotsByName(settingsForm)

    def retranslateUi(self, settingsForm):
        _translate = QtCore.QCoreApplication.translate
        settingsForm.setWindowTitle(_translate("settingsForm", "Settings"))
        self.groupBox.setTitle(_translate("settingsForm", "Settings for fields generation"))
        self.excersizeTime.setDisplayFormat(_translate("settingsForm", "mm:ss"))
        self.linePixelSizeLabel.setText(_translate("settingsForm", "<html><head/><body><p>Line width (pixels)</p></body></html>"))
        self.lineColorLabel.setText(_translate("settingsForm", "Line color"))
        self.mazeCellSizeValue.setText(_translate("settingsForm", "<html><head/><body><p align=\"center\">3</p></body></html>"))
        self.svgFieldLabel.setText(_translate("settingsForm", "Save SVG field for each XML field"))
        self.pngImageCheckBox.setText(_translate("settingsForm", "True"))
        self.timelimitLabel.setText(_translate("settingsForm", "Timelimit for excersize"))
        self.lineCellSizeLabel.setText(_translate("settingsForm", "Line cell size (in TRIK Studio cells)"))
        self.roboticsKitLabel.setText(_translate("settingsForm", "Robotics construction kit"))
        self.applyChangesButton.setText(_translate("settingsForm", "Apply changes"))
        self.pngImageLabel.setText(_translate("settingsForm", "Save PNG field preview"))
        self.mazeCellSizeLabel.setText(_translate("settingsForm", "Maze cell size (in TRIK Studio cells)"))
        self.svgFieldCheckBox.setText(_translate("settingsForm", "True"))
        self.lineCellSizeValue.setText(_translate("settingsForm", "<html><head/><body><p align=\"center\">2</p></body></html>"))
        self.linePixelSizeValue.setText(_translate("settingsForm", "<html><head/><body><p align=\"center\">6</p></body></html>"))
        self.roboticsKitList.setItemText(0, _translate("settingsForm", "TRIK"))
        self.roboticsKitList.setItemText(1, _translate("settingsForm", "Lego EV3"))
        self.roboticsKitList.setItemText(2, _translate("settingsForm", "XML"))
        self.MazeLoopsLabel.setText(_translate("settingsForm", "Map with loops"))
        self.MazeLoopsCheckBox.setText(_translate("settingsForm", "True"))
